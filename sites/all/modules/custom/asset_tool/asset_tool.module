<?php

/**
 * Implements hook_menu().
 */
function asset_tool_menu() {
  $items['asset-tool/settings'] = array(
    'title' => 'Settings',
    'page callback' => 'drupal_get_form',
    'page arguments' => array('asset_tool_settings_form'),
    'access arguments' => array('access content'),
    'type' => MENU_SUGGESTED_ITEM,
  );

  return $items;
}

function asset_tool_settings_form($form, &$form_state) {
  $form = array('#tree' => TRUE);

  // Check if assets exist... cannot change if assets exist.
  $q = new EntityFieldQuery();
  $q->entityCondition('entity_type', 'asset');
  $result = $q->execute();

  $form['app_system_period'] = array(
    '#type' => 'select',
    '#title' => t('App Period'),
    '#options' => array(
      '' => '--Select--',
      'monthly' => 'Monthly',
      'quarterly' => 'Quarterly',
      'biannually' => 'Biannually',
      'annually' => 'Annually',
    ),
    '#default_value' => variable_get('app_system_period', ''),
    '#disabled' => (count($result) > 0),
  );

  $conditions = asset_tool_conditions_load();
dpm($conditions);
  foreach ($conditions as $cond_id => $cond) {
    $form[$cond_id] = $cond['controller']::settingsForm();

  }

  $form['actions'] = array(
    '#type' => 'actions',
    'submit' => array(
      '#type' => 'submit',
      '#value' => t('Save Configuration'),
    ),
  );

  $form['#theme'] = 'system_settings_form';

  return $form;
}

function asset_tool_settings_form_validate($form, &$form_state) {
dpm($form_state);
  //variable_set('app_system_period', $form);

  $conditions = asset_tool_conditions_load();
  foreach ($conditions as $cond_id => $cond) {
    $form[$cond_id] = $cond['controller']::settingsFormValidate($form, $form_state);
  }
}

function asset_tool_settings_form_submit($form, &$form_state) {

  variable_set('app_system_period', $form_state['values']['app_system_period']);

  $conditions = asset_tool_conditions_load();
  foreach ($conditions as $cond_id => $cond) {
    $form[$cond_id] = $cond['controller']::settingsFormSubmit($form, $form_state);
  }
}

/**
 *
 */
function asset_tool_conditions_load() {

  $conditions = array();
  foreach (	module_implements('asset_tool_condition') as $module) {
    $func = $module . '_asset_tool_condition';
    $conditions += $func();
  }

  foreach ($conditions as $cond_machine_name => $cond) {
    $controller = new $cond['controller'];
    if (!is_subclass_of($controller, 'assetToolConditionBase')) {
      unset($conditions[$cond_machine_name]);
    }

    // Check weight.
    if (!isset($conditions[$cond_machine_name]['weight'])) {
      $conditions[$cond_machine_name]['weight'] = 0;
    }
  }

  // Check dependencies.
  foreach ($conditions as $cond_machine_name => $cond) {
    if (isset($cond['dependencies']) && !empty($cond['dependencies'])) {
      foreach ($cond['dependencies'] as $dependency) {
        if (!isset($conditions[$dependency])) {
          unset($conditions[$cond_machine_name]);
          break;
        }
      }
    }
  }

  // Reorder by weight.
  uasort($conditions, "_reorder_conditions");

  return $conditions;
}

function _reorder_conditions($a, $b) {
  if ($a['weight'] == $b['weight']) {
      return 0;
  }
  return ($a['weight'] < $b['weight']) ? -1 : 1;
}

/**
 * Implements hook_schema_alter().
 */
function asset_tool_schema_alter(&$schema) {

  $conditions = asset_tool_conditions_load();

  foreach ($conditions as $con_id => $cond) {
    $db_updates = $cond['controller']::hookSchema();
    $schema['asset_data']['fields'] += $db_updates['fields'];
  }
}

/**
 * Implements hook_modules_enabled().
 */
function asset_tool_modules_enabled($modules) {
  $table = 'asset_data';
dpm($modules);
  foreach ($modules as $module) {
    $func = $module . '_asset_tool_condition';
    if (function_exists($func)) {
      $conditions = $func();

      // Save variable.
      $at_schema_settings = variable_get('at_schema_settings', array());

      foreach ($conditions as $cond_id => $condition) {
        $new_schema = $condition['controller']::hookSchema();

        $at_schema_settings[$module][$cond_id] = $new_schema;
        // Update fields
        foreach ($new_schema['fields'] as $field_id => $field_description) {
          if (!db_field_exists($table, $field_id)) {
dpm($field_id);
dpm('add field');
            $r = db_add_field($table, $field_id, $field_description);
          }
        }
      }

      variable_set('at_schema_settings', $at_schema_settings);
    }
  }
}

/**
 * Implements hook_modules_uninstalled().
 */
function asset_tool_modules_uninstalled($modules) {
  $table = 'asset_data';
  foreach ($modules as $module) {
    $at_schema_settings = variable_get('at_schema_settings', array());

    if (isset($at_schema_settings[$module])) {
      foreach($at_schema_settings[$module] as $cond_id => $new_schema) {
        foreach ($new_schema['fields'] as $field_id => $field_description) {
          if (db_field_exists($table, $field_id)) {
            $r = db_drop_field($table, $field_id);
          }
        }
      }

      unset($at_schema_settings[$module]);
    }
    variable_set('at_schema_settings', $at_schema_settings);
  }
}
